name: Update Rebrickable Client

on:
  push:
    paths: ".github/workflows/update_rebrickable_client.yml"
  schedule:
    - cron: "0 1 * * SUN"

env:
  REBRICKABLE_API_URL: "https://rebrickable.com/api/v3/swagger/?format=openapi"
  SCHEMA_HASH: ${{ secrets.SCHEMA_HASH }}

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      schema_new_hash: ${{ steps.schema_new.outputs.hash }}
      schema_old_hash: ${{ steps.schema_old.outputs.hash }}
    steps:
      - name: Event
        run: echo '${{ toJSON(github) }}'

      - name: Download a file
        run: curl $REBRICKABLE_API_URL -o rebrickable_schema.json

      - name: Set current schema hash
        id: schema_new
        run: echo "::set-output name=hash::$(sha256sum  rebrickable_schema.json | awk '{print $1}')"

      - name: Set current schema hash
        id: schema_old
        run: echo "::set-output name=hash::${{ env.SCHEMA_HASH }}"

  generator:
    if: ${{ needs.check.outputs.schema_new_hash != needs.check.outputs.schema_old_hash }}
    needs: check
    runs-on: ubuntu-latest
    steps:
      - name: Download runner2
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          workflow: rebrickable_generator_build.yml
          workflow_conclusion: success

      - name: Update Executable Permissions
        working-directory: ./RebrickableGeneratorExecutable
        run: chmod 777 Rebrickable.Generator

      - name: Update Client File
        run: |
          ./RebrickableGeneratorExecutable/Rebrickable.Generator ${{ env.REBRICKABLE_API_URL }} >> ./RebrickableGeneratorExecutable/RebrickableApiClient.cs

      - name: Upload Client File Artifact
        uses: actions/upload-artifact@v3.0.0
        with:
          name: RebrickableApiClient
          path: ./RebrickableGeneratorExecutable/RebrickableApiClient.cs
          retention-days: 5
  commit:
    runs-on: ubuntu-latest
    needs: generator
    steps:
      - uses: actions/checkout@v2

      - name: Download RebrickableApiClient Artifact
        uses: actions/download-artifact@v3.0.0
        with:
          name: RebrickableApiClient
      
      - run : ls
      - name: Copy Client
        run: mv ./RebrickableApiClient/RebrickableApiClient.cs ./src/Rebrickable/Rebrickable.Api/

      - name: Commit New Client
        # You may pin to the exact commit or the version.
        # uses: EndBug/add-and-commit@050a66787244b10a4874a2a5f682130263edc192
        uses: EndBug/add-and-commit@v9.0.0
        with:
          # Arguments for the git add command
          #add: # optional, default is .
          # The name of the user that will be displayed as the author of the commit
          author_name: "Automation"
          # The email of the user that will be displayed as the author of the commit
          #author_email: # optional
          # Additional arguments for the git commit command
          #commit: # optional
          # The name of the custom committer you want to use
          #committer_name: # optional
          # The email of the custom committer you want to use
          #committer_email: # optional
          # The directory where your repository is located. You should use actions/checkout first to set it up
          #cwd: # optional, default is .
          # How the action should fill missing author name or email.
          #default_author: # optional, default is github_actor
          # The message for the commit
          message: "New Client File"
          # The name of the branch to create.
          #new_branch: # optional
          # The way the action should handle pathspec errors from the add and remove commands.
          #pathspec_error_handling: # optional, default is ignore
          # Arguments for the git pull command. By default, the action does not pull.
          #pull: # optional
          # Whether to push the commit and, if any, its tags to the repo. It can also be used to set the git push arguments (more info in the README)
          #push: # optional, default is true
          # Arguments for the git rm command
          #remove: # optional
          # Arguments for the git tag command (the tag name always needs to be the first word not preceded by a hyphen)
          #tag: # optional
          # Arguments for the git push --tags command (any additional argument will be added after --tags)
          #tag_push: # optional
          # The token used to make requests to the GitHub API. It's NOT used to make commits and should not be changed.
          #github_token: # optional, default is ${{ github.token }}

